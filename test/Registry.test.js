
/**
 * 
 * autogenerated by solidity-visual-auditor
 * 
 * execute with: 
 *  #> truffle test <path/to/this/test.js>
 * 
 * */
var Registry = artifacts.require("/Users/prasad/projects/chainid/contracts/contracts/Registry.sol");

contract('Registry', (accounts) => {
    var creatorAddress = accounts[0];
    var user1 = accounts[1];
    var user2 = accounts[2];
    var user3 = accounts[3];
    var unprivilegedAddress = accounts[4]
    /* create named accounts for contract roles */

    let registry;

    before(async () => {
        registry = await Registry.deployed();
    })

    it('should register identity', async () => {
        await registry.registerIdentity("0x6666", {from: user1});
        await registry.registerIdentity("0x6667", {from: user2});
        await registry.registerIdentity("0x6668", {from: user3});

        expect((await registry.getIdentity("0x6666"))).to.equal(user1);
        expect((await registry.getIdentity("0x6667"))).to.equal(user2);
        expect((await registry.getIdentity("0x6668"))).to.equal(user3);
    });
});
